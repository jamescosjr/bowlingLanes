services:
  api:
    build: .
    container_name: bowling-lanes-api
    restart: unless-stopped
    ports: ["3001:3000"]
    networks: ["app-net"]
    environment:
      PORT: 3000
      MONGODB_URI: \${MONGODB_URI}
      OTEL_EXPORTER_OTLP_ENDPOINT: 'http://otel-collector:4317'
    depends_on: [mongo, otel-collector]
  mongo:
    image: mongo:6.0
    container_name: bowling-lanes-mongo
    restart: unless-stopped
    networks: ["app-net"]
    volumes: ["mongo-data:/data/db"]
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports: ["3002:3000"]
    volumes: ["./grafana/provisioning:/etc/grafana/provisioning", "grafana-data:/var/lib/grafana"]
    environment: {GF_SECURITY_ADMIN_USER: admin, GF_SECURITY_ADMIN_PASSWORD: admin}
    networks: ["app-net"]
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports: ["9091:9090"]
    volumes: ["./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml", "prometheus-data:/prometheus"]
    command: --config.file=/etc/prometheus/prometheus.yml
    networks: ["app-net"]
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports: ["3100:3100"]
    command: -config.file=/etc/loki/local-config.yaml
    networks: ["app-net"]
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports: ["16686:1686", "4317:4317"]
    networks: ["app-net"]
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    ports: ["4318:4318", "8889:8889"]
    volumes: ["./otel-collector/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml"]
    networks: ["app-net"]
    depends_on: [jaeger, loki, prometheus]
networks:
  app-net: {driver: bridge}
volumes:
  mongo-data: {driver: local}
  prometheus-data: {driver: local}
  grafana-data: {driver: local}